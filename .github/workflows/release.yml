name: build and release and upload assets
on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  make-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

  build-arm:
    runs-on: ubuntu-latest
    needs:
      - make-release
    steps:
      - uses: actions/checkout@v3
      - uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspios_lite_arm64:latest
          copy_artifact_path: poncho_arm
          commands: |
            # java
            sudo apt update
            sudo apt install -y default-jdk
            java -version

            # scala
            curl -fL https://github.com/coursier/launchers/raw/master/cs-aarch64-pc-linux.gz | gzip -d > cs && chmod +x cs && ./cs setup
            export PATH=$PATH:~/.local/share/coursier/bin
            # check
            scala -version

            # sbt
            echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
            echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
            curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
            sudo apt-get update
            sudo apt-get install -y sbt clang
            # check
            sbt -version

            # libuv
            git clone https://github.com/libuv/libuv && cd libuv && ./autogen.sh && ./configure && make && sudo make install

            # secp256k1 with Schnorr
            git clone https://github.com/bitcoin-core/secp256k1 && cd secp256k1 && ./autogen.sh && ./configure --enable-module-schnorrsig --enable-module-recovery && make && sudo make install

            # download source
            git clone https://github.com/fiatjaf/poncho/
            cd poncho
            # build
            SN_LINK=static sbt nativeLink
            mv target/scala-*/poncho-out poncho_arm
      - uses: actions/upload-artifact@v3
        with:
          path: poncho_arm
          name: poncho_arm
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: poncho_arm
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}
